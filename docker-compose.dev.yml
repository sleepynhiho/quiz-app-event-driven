version: '3.8'

services:
  # Override quiz-service for development
  quiz-service:
    build:
      context: ./services/quiz-service
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      JWT_SECRET: 5dad9040183348ba83ae86bcd14f535a
    volumes:
      - ./services/quiz-service/src:/app/src:ro
      - ./shared:/app/shared:ro
      - /app/node_modules
    command: npm run dev
    networks:
      - quiz-network

  # Kafka UI for development
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: quiz-kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8080:8080"
    networks:
      - quiz-network

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: quiz-pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quiz-app.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - quiz-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: quiz-redis-commander
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379:0:redispassword
    ports:
      - "8082:8081"
    networks:
      - quiz-network

volumes:
  pgadmin_data:
    driver: local

networks:
  quiz-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.32.0.0/16
